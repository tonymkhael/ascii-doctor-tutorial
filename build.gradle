buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.8'
        classpath 'org.ysb33r.gradle:vfs-gradle-plugin:1.0-beta1'
        classpath 'commons-httpclient:commons-httpclient:3.1'
    }
}

plugins {
	id 'org.asciidoctor.convert' version '1.5.2'
	id 'com.github.jruby-gradle.base' version '0.3.0'
}

project.version = '1.0-SNAPSHOT'
project.group = 'murex.pgop'
project.description = 'PGOP :: Risk Server Design'

dependencies {
	gems 'rubygems:asciidoctor-diagram:1.3.0'
   gems 'rubygems:haml:4.0.6'
}

ext {
	revealjsVersion = '3.1.0'
	asciidoctorBackendVersion = 'master'
	downloadDir = new File(buildDir,'download')
	templateDir = new File(downloadDir,'templates')
	revealjsDir   = new File(downloadDir,'reveal.js')
}

task download << {
	mkdir downloadDir
	vfs {

options {
        http {
            proxyHost System.properties['https.proxyHost']
            proxyPort System.properties['https.proxyPort']
        }
    }

		cp "zip:https://github.com/asciidoctor/asciidoctor-reveal.js/archive/${asciidoctorBackendVersion}.zip!asciidoctor-reveal.js-${asciidoctorBackendVersion}",
				templateDir, recursive:true, overwrite:true
		cp "zip:https://github.com/hakimel/reveal.js/archive/${revealjsVersion}.zip!reveal.js-${revealjsVersion}",
                revealjsDir, recursive:true, overwrite:true


	}

}

download {
	description "Download extra revealjs resources"
	outputs.dir templateDir
	outputs.dir revealjsDir
}

apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'org.ysb33r.vfs'
apply plugin: 'java'
apply plugin: 'org.asciidoctor.convert'

class AsciiDoctorDefault extends org.asciidoctor.gradle.AsciidoctorTask {

     AsciiDoctorDefault(){
        doFirst {
          System.setProperty('jruby.logger.class','org.jruby.util.log.StandardErrorLogger')
        }

        resources {
          from(sourceDir) {
            include 'css/**'
            include 'images/**'
          }
        }

        requires 'asciidoctor-diagram'

        attributes  'build-gradle': new File('build.gradle'),
                        'source-highlighter' : 'highlightjs',
                        'highlightjs-theme' : 'github',
                        'imagesdir':'images',
                        'imagesoutdir':'images',
                        'sourceDir':'../../main/java',
                        'setanchors':'true',
                        'idprefix':'',
                        'idseparator':'-',
                        'docinfo1':'true'
     }

}

task(generateSlides, type: AsciiDoctorDefault){

   resources {
       from (downloadDir) {
         include 'reveal.js/**'
       }
     }

  dependsOn jrubyPrepareGems
  gemPath jrubyPrepareGems.outputDir
  separateOutputDirs = false
  outputDir = new File(project.buildDir, '/asciidoc/deck-js')
  backends 'html5'
  options template_dirs : [new File(templateDir,'templates/slim').absolutePath ]
  dependsOn download
}

task(generateHtml5, type: AsciiDoctorDefault){
   dependsOn jrubyPrepareGems
   gemPath jrubyPrepareGems.outputDir
   backends 'html5'
}

task(generatePdf, type: AsciiDoctorDefault){
   dependsOn jrubyPrepareGems
   gemPath jrubyPrepareGems.outputDir
   backends 'pdf'
}

task generateAll{
   dependsOn generatePdf
   dependsOn generateHtml5
   dependsOn generateSlides
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
